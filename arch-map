# docker-style arch (https://github.com/docker-library/official-images#architectures-other-than-amd64)
ARCH=${1:-$ARCH}

if [ "$ARCH" = "amd64" ]; then
    export DOCKER_ARCH=amd64
    export GOARCH=amd64
    export DPKG_ARCH=amd64
    export YUM_ARCH=x86_64
    export GCC_ARCH=x86_64
    export TRIPLET=x86_64-linux-gnu
    export ARCH32=i386
elif [ "$ARCH" = "i386" ]; then
    export DOCKER_ARCH=i386
    export GOARCH=386
    export DPKG_ARCH=i386
    export YUM_ARCH=i686
    export GCC_ARCH=i686
    export TRIPLET=i686-linux-gnu
    export ARCH32=i386
elif [ "$ARCH" = "arm64v8" ]; then
    export DOCKER_ARCH=arm64v8
    export GOARCH=arm64
    export DPKG_ARCH=arm64
    export YUM_ARCH=aarch64
    export GCC_ARCH=aarch64
    export TRIPLET=aarch64-linux-gnu
    export ARCH32=arm
elif [ "$ARCH" = "arm32v7" ]; then
    export DOCKER_ARCH=arm32v7
    export GOARCH=arm
    export DPKG_ARCH=armhf
    export YUM_ARCH=arm
    export GCC_ARCH=arm
    export TRIPLET=arm-linux-gnueabi
    export ARCH32=arm
elif [ "$ARCH" = "ppc" ]; then
    export DOCKER_ARCH=ppc
    export GOARCH=ppc
    export DPKG_ARCH=powerpc
    export YUM_ARCH=ppc
    export GCC_ARCH=powerpc
    export TRIPLET=powerpc-linux-gnu
    export ARCH32=ppc
elif [ "$ARCH" = "ppc64" ]; then
    export DOCKER_ARCH=ppc64
    export GOARCH=ppc64
    export DPKG_ARCH=ppc64
    export YUM_ARCH=ppc64
    export GCC_ARCH=powerpc64
    export TRIPLET=powerpc64-linux-gnu
    export ARCH32=ppc
elif [ "$ARCH" = "ppc64le" ]; then
    export DOCKER_ARCH=ppc64le
    export GOARCH=ppc64le
    export DPKG_ARCH=ppc64el
    export YUM_ARCH=ppc64le
    export GCC_ARCH=powerpc64le
    export TRIPLET=powerpc64le-linux-gnu
    export ARCH32=ppc
else
    echo "Unknown arch $ARCH"
fi

if [ "$ARCHMAP_PRINT" = "1" ]; then
    echo DOCKER_ARCH=$DOCKER_ARCH
    echo GOARCH=$GOARCH
    echo DPKG_ARCH=$DPKG_ARCH
    echo YUM_ARCH=$YUM_ARCH
    echo GCC_ARCH=$GCC_ARCH
    echo TRIPLET=$TRIPLET
    echo ARCH32=$ARCH32
fi
